digraph "Level" {
rankdir=BT
charset="utf-8"
"scene.SceneInterface" [color="black", fontcolor="black", label=<{SceneInterface|<br ALIGN="LEFT"/>|close_scene()<br ALIGN="LEFT"/><I>draw</I>(screen: pg.display)<br ALIGN="LEFT"/><I>get_player_data</I>()<br ALIGN="LEFT"/><I>handle_events</I>(event_list: list[pg.event.Event])<br ALIGN="LEFT"/><I>load_scene</I>()<br ALIGN="LEFT"/><I>set_player_data</I>(data)<br ALIGN="LEFT"/><I>update</I>()<br ALIGN="LEFT"/><I>update_screen_res</I>()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"level.Level" [color="black", fontcolor="black", label=<{Level|back_sprite<br ALIGN="LEFT"/>chunk_size : int<br ALIGN="LEFT"/>clock : Clock<br ALIGN="LEFT"/>collision_sprites : CameraSpriteGroup<br ALIGN="LEFT"/>completed : bool<br ALIGN="LEFT"/>controller : ControllerInterface<br ALIGN="LEFT"/>deadScene<br ALIGN="LEFT"/>director : Director<br ALIGN="LEFT"/>enemies_amount : int<br ALIGN="LEFT"/>enemies_goal : int<br ALIGN="LEFT"/>enemies_goal_text<br ALIGN="LEFT"/>enemy_pool : list<br ALIGN="LEFT"/>enemy_sprite_group : CameraSpriteGroup<br ALIGN="LEFT"/>font<br ALIGN="LEFT"/>font : NoneType<br ALIGN="LEFT"/>level_size : tuple<br ALIGN="LEFT"/>map_grid<br ALIGN="LEFT"/>objective_items : list<br ALIGN="LEFT"/>objective_text<br ALIGN="LEFT"/>optional_items : list<br ALIGN="LEFT"/>original_enemies_amount : int<br ALIGN="LEFT"/>pauseMenu<br ALIGN="LEFT"/>player : Player<br ALIGN="LEFT"/>player_sprite_group : CameraSpriteGroup<br ALIGN="LEFT"/>rewind : bool<br ALIGN="LEFT"/>scale : int<br ALIGN="LEFT"/>scaling_factors : tuple<br ALIGN="LEFT"/>screen_res<br ALIGN="LEFT"/>sprite_size : tuple<br ALIGN="LEFT"/>thrown_sprites : CameraSpriteGroup<br ALIGN="LEFT"/>user_interface_group<br ALIGN="LEFT"/>visible_sprites : CameraSpriteGroup<br ALIGN="LEFT"/>|__init__(controller, screen_res, scale, level_size)<br ALIGN="LEFT"/><I>_generate</I>(levelGenerator)<br ALIGN="LEFT"/>check_pass_condition()<br ALIGN="LEFT"/>draw(screen)<br ALIGN="LEFT"/>get_damagable_sprites()<br ALIGN="LEFT"/>get_player_data()<br ALIGN="LEFT"/>handle_events(event_list)<br ALIGN="LEFT"/>load_scene()<br ALIGN="LEFT"/>set_player_data(player_data)<br ALIGN="LEFT"/>update()<br ALIGN="LEFT"/>update_controller(controller)<br ALIGN="LEFT"/>update_screen_res(screen: pg.Surface)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"level.Level_1" [color="black", fontcolor="black", label=<{Level_1|enemy_pool : list<br ALIGN="LEFT"/>surface : SurfaceMapper<br ALIGN="LEFT"/>|_generate(levelGenerator: LevelGenerator)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"level.Level_2" [color="black", fontcolor="black", label=<{Level_2|enemy_pool : list<br ALIGN="LEFT"/>surface : SurfaceMapper<br ALIGN="LEFT"/>|_generate(levelGenerator: LevelGenerator)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"level.Level_3" [color="black", fontcolor="black", label=<{Level_3|enemy_pool : list<br ALIGN="LEFT"/>surface : SurfaceMapper<br ALIGN="LEFT"/>|_generate(levelGenerator: LevelGenerator)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"level_generator.Level_1_surface" [color="black", fontcolor="black", label=<Level_1_surface>, shape="record", style="solid"];
"level_generator.Level_2_surface" [color="black", fontcolor="black", label=<Level_2_surface>, shape="record", style="solid"];
"level_generator.Level_3_surface" [color="black", fontcolor="black", label=<Level_3_surface>, shape="record", style="solid"];
"level.Level_1" -> "level.Level" [arrowhead="empty", arrowtail="none"];
"level.Level_2" -> "level.Level" [arrowhead="empty", arrowtail="none"];
"level.Level_3" -> "level.Level" [arrowhead="empty", arrowtail="none"];
"level_generator.Level_1_surface" -> "level.Level_1" [arrowhead="open"];
"level_generator.Level_2_surface" -> "level.Level_2" [arrowhead="open"];
"level_generator.Level_3_surface" -> "level.Level_3" [arrowhead="open"];
"level.Level" -> "scene.SceneInterface" [arrowhead="empty", style="dashed"];
}
