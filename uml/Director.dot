digraph "classes" {
rankdir=BT
charset="utf-8"
"audio.Audio" [color="black", fontcolor="black", label=<{Audio|channels : list<br ALIGN="LEFT"/>control : bool<br ALIGN="LEFT"/>controlRewind : bool<br ALIGN="LEFT"/>controlRewind : bool<br ALIGN="LEFT"/>currentChannel<br ALIGN="LEFT"/>currentSong<br ALIGN="LEFT"/>currentSong : str<br ALIGN="LEFT"/>invertPath : str<br ALIGN="LEFT"/>normalPath : str<br ALIGN="LEFT"/>p<br ALIGN="LEFT"/>positionOriginal : int<br ALIGN="LEFT"/>positionOriginal : int<br ALIGN="LEFT"/>songsDurations : list<br ALIGN="LEFT"/>|__init__()<br ALIGN="LEFT"/>_getSongIndex()<br ALIGN="LEFT"/>change_track(track)<br ALIGN="LEFT"/>end_rewinded()<br ALIGN="LEFT"/>getVolume(type)<br ALIGN="LEFT"/>loadSound(track)<br ALIGN="LEFT"/>playAttackSound(sound)<br ALIGN="LEFT"/>playSound(sound, loop)<br ALIGN="LEFT"/>play_track()<br ALIGN="LEFT"/>setChannel(channel)<br ALIGN="LEFT"/>startMusic()<br ALIGN="LEFT"/>start_rewinded()<br ALIGN="LEFT"/>stopMusic()<br ALIGN="LEFT"/>stopSound(sound)<br ALIGN="LEFT"/>turnDownVolume(type)<br ALIGN="LEFT"/>turnUpVolume(type)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"controller.ControllerInterface" [color="black", fontcolor="black", label=<{ControllerInterface|events : list<br ALIGN="LEFT"/>|__subclasshook__(subclass)<br ALIGN="LEFT"/><I>get_input</I>(): list[tuple[bool, str]]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"director.Director" [color="black", fontcolor="black", label=<{Director|audio<br ALIGN="LEFT"/>clock<br ALIGN="LEFT"/>controller<br ALIGN="LEFT"/>director_stack : list<br ALIGN="LEFT"/>res_idx<br ALIGN="LEFT"/>res_idx : int<br ALIGN="LEFT"/>resolutions : list<br ALIGN="LEFT"/>run : bool<br ALIGN="LEFT"/>run : bool<br ALIGN="LEFT"/>scene_stack : list<br ALIGN="LEFT"/>screen<br ALIGN="LEFT"/>screen<br ALIGN="LEFT"/>|__new__()<br ALIGN="LEFT"/>close()<br ALIGN="LEFT"/>dead_scene()<br ALIGN="LEFT"/><I>draw_until_not_translucid</I>()<br ALIGN="LEFT"/>modify_screen_res(increment)<br ALIGN="LEFT"/>pop_scene()<br ALIGN="LEFT"/>pop_scene_without_load()<br ALIGN="LEFT"/>push_scene(stack_element)<br ALIGN="LEFT"/>running_loop()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"controller.KeyboardController" [color="black", fontcolor="black", label=<{KeyboardController|key_dict : dict<br ALIGN="LEFT"/>|__init__()<br ALIGN="LEFT"/>_get_val(index: int)<br ALIGN="LEFT"/>get_input(event_list: list[pg.event.Event]): list[tuple[bool, str]]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"scene.SceneInterface" [color="black", fontcolor="black", label=<{SceneInterface|<br ALIGN="LEFT"/>|__subclasshook__(subclass)<br ALIGN="LEFT"/>close_scene()<br ALIGN="LEFT"/><I>draw</I>(screen: pg.display)<br ALIGN="LEFT"/><I>get_player_data</I>()<br ALIGN="LEFT"/><I>handle_events</I>(event_list: list[pg.event.Event])<br ALIGN="LEFT"/><I>load_scene</I>()<br ALIGN="LEFT"/><I>set_player_data</I>(data)<br ALIGN="LEFT"/><I>update</I>()<br ALIGN="LEFT"/><I>update_screen_res</I>()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"controller.KeyboardController" -> "controller.ControllerInterface" [arrowhead="empty", arrowtail="none"];
"audio.Audio" -> "director.Director" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="audio", style="solid"];
"controller.KeyboardController" -> "director.Director" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="controller", style="solid"];
"scene.SceneInterface" -> "director.Director" [arrowhead="open", fontcolor="black", label="current_scene_stack_item", style="dashed"];
}
